[http]
filePathWeatherData = weatherData.json
user = 'customer'
password = 'XXXXXXXX'

; Wenn ein zweites Feld mit anderer Ausrichtung vorhanden ist, hier Anzahl=2 eintragen
; und die Werte unter [forecast.solar2] und/oder [solcast.com2] eintragen
[pv.strings]
anzahl = 1

[gen24]
; IP Wechselrichter
hostNameOrIp = 192.168.178.50
port = 502

[Ladeberechnung]
; Wenn die Variable "FesteLadeleistung" größer "0" Watt ist, wird der Wert geschrieben.
FesteLadeleistung = 0

; Bis wann (Stunde) soll die Batterie voll sein,
BattVollUm = 14
; Faktor um Batteriekapazität für später aufzusparen.
; Der aus der Prognose errechnete Batterieladewert wird durch den BatSparFaktor geteilt.
BatSparFaktor = 0.5

; print_level 0=keine Ausgabe 1=Ausgabe 2=DEBUG Ausgabe
print_level = 1
; Groester Batterieladewert, der im WR gesetzt werden soll, aber höchstens der maximale mögliche Ladewert!!!
MaxLadung = 3000
; die Einspeisegrenze sollte etwas unterhalb der wirklichen Grenze liegen (1-2%).
Einspeisegrenze = 7900
; AC Kapazität des Wechselrichters um den Überschuss in die Batterie zu laden (etwas darunter bleiben 1-2%)
WR_Kapazitaet = 10000

; PV-Leistung reellen Spitzenwert
PV_Leistung_Watt = 11400

; Grundlast wird verwendet um den Wert "aktuellerUeberschuss" zu berechnen
Grundlast = 0
; Grundlast je nach Wochentag wird gesetzt, wenn Grundlast == 0
; Wochentage  = Mo,  Die, Mi,  Do,  Fr,  Sa,   So
Grundlast_WoT = 900, 900, 900, 900, 900, 1400, 1800

; Schaltverzögerung um Schreibzugriffe auf WR zu minimieren
WRSchreibGrenze_nachOben = 700
WRSchreibGrenze_nachUnten = 1800

; Liegt der Batteriestatus unter MindBattLad in % wird voll geladen
MindBattLad = 30
; Wenn Ladung ausgeschaltet den Wert LadungAus in Watt setzen (z.B. 0 oder 10 )
LadungAus = 0
; Wenn größter Prognosewert je Stunde ist kleiner als GrenzwertGroestePrognose volle Ladung
GrenzwertGroestePrognose = 3000

; Akkuschonung (1=ein, 0=aus) dadurch wird der Akku zwischen 80 und 100% mit 0,2C bzw. 0,1C geladen
; und BattVollUm wird um eine Stunde vor verlegt, da am Schluss nicht mehr so stark geladen wird.
; ACHTUNG: Eine Überschreitung der Einspeisegrenze bzw. AC-Leistung des WR setzt die Akkuschonung aus!
Akkuschonung = 0

; hier muessen die Namen der zusätzlichen Konfigurationen definiert werden.
; mit Zusatz_Ladebloecke = aus können die zusätzlichen Konfigurationen abgeschaltet werden
; Zusatz_Ladebloecke = aus
Zusatz_Ladebloecke = Winter, Uebergang

[Winter]
; in den Wintermonaten werden die Standardwerte aus dem Block [Ladeberechnung] durch die Nachfolgenden ersetzt
; Monate ist ein Schlüssel und muss im Block vorhanden sein
; die Monate müssen immer zweistellig sein!!
Monate = 11, 12, 01
; hier Werte für den Zusatz_Ladeblock angeben
; die Liste ist nicht abschließend und kann erweitert werden
BattVollUm = 14
BatSparFaktor = 3.0
MaxLadung = 5000
WRSchreibGrenze_nachOben = 700
WRSchreibGrenze_nachUnten = 1600
MindBattLad = 50

[Uebergang]
Monate = 09, 10, 02
BattVollUm = 13
BatSparFaktor = 1.0


[Reservierung]
; Reservierungsdateiname
PV_ReservieungsDatei = Watt_Reservierung.json
; Hier kann die PV-Reserierung (z.B. für ein E-Auto nachmittags) eingeschaltet werden (1=ein, 0=aus)
PV_Reservierung_steuern = 1

[Entladung]
; Konfigdaten für die Entladesteuerung
Akku_EntladeSteuerungsFile = Akku_EntLadeSteuerFile.json
; Batterieentladung ein- bzw. ausschalten (1=ein, 0=aus)
Batterieentlandung_steuern = 1
; Damit nicht so häufig auf dem WR geschrieben wird nur bei Abweichung größer WRSchreibGrenze_Watt schreiben
WREntladeSchreibGrenze_Watt = 200

; Entladung des Akku auf bestimmten Prozentsatz begrenzen (1=ein, 0=aus)
EntladeGrenze_steuern = 0
; PrognoseGenze in KWh
ProgGrenzeMorgen = 10
; Entladegrenzen in %
EntladeGrenze_Min = 0
EntladeGrenze_Max = 30

[messaging]
; Hier Daten für Pushmessage auf Handy
; Push_Message_EIN (1=EIN/0=AUS)
Push_Message_EIN = 0
Push_Message_Url = https://ntfy.sh/XXXXXXXXX

[Logging]
; durch Logging ein werden die Werte in eine SQLite Datei zur Auswertung geschrieben (1=ein, 0=aus)
Logging_ein = 0
Logging_file = PV_Daten.sqlite

[Fallback]
; Ab hier Konfiguration der Fallbackfunktion
; Werte 0, 1 oder 2
Fallback_on = 0
; Fallbackzeit = (Fallback_Zeitabstand_Std * 3600 + Cronjob_Minutenabstand *60 *0.9)
Fallback_Zeitabstand_Std = 5
Cronjob_Minutenabstand = 5
