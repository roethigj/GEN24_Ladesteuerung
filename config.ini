# Genauere Erklärungen siehe config.info
[env]
filePathWeatherData=weatherData.json

# Wenn ein zweites Feld mit anderer Ausrichtung vorhanden ist, hier anzahl=2 eintragen
# und die Werte unter [forecast.solar2] eintragen
[pv.strings]
anzahl=1

[forecast.solar]
lat=44.444
lon=11.111
dec=30
az=0
kwp=11.4
dataAgeMaxInMinutes=10000

[forecast.solar2]
lat=11.111
lon=6.666
dec=22
az=135
kwp=4.44

# Hier die Werte eintragen, wenn die Prognosse mit Solarprognose_WeatherData.py von http://www.solarprognose.de geholt werden soll
[solarprognose]
weatherfile = weatherData.json
accesstoken = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
item = inverter
id = 1111
type = hourly
dataAgeMaxInMinutes = 100
# Sekunden des sleep = Vorgabe von solarprognose.de
WaitSec = 21
# mögliche Werte mosmix|own-v1|clearsky
algorithm=own-v1
# falls die Anlagengröße in KWp nicht mit der Größe in Solarprognose übereinstimmt (z.B. Erweiterung)
KW_Faktor = 1.00

[gen24]
# IP Wechselrichter
hostNameOrIp=192.168.178.50
port=502

[Ladeberechnung]
# Wenn die Variable "FesteLadeleistung" größer "0" Watt ist, wird der Wert geschrieben.
FesteLadeleistung = 0

# Bis wann (Stunde) soll die Batterie voll sein, 
BattVollUm = 16
# Faktor um Batteriekapazitaet fuer spaeter zu sparen. (0 = AUS)
# Frühjahr/Sommerwert
#BatSparFaktor = 1.2
# Herbst/Winterwert
#BatSparFaktor = 0
BatSparFaktor = 0
# BatWaitFaktor ist für meine exakt nach Süden ausgerichtete PV-Anlage nötig! (0 = AUS)
# Frühjahr/Sommerwert
#BatWaitFaktor = 4.0
# Herbst/Winter
#BatWaitFaktor = 0.0
BatWaitFaktor = 0.0
BatWaitFaktor_Max = 10

# print_level 1=Ausgabe 0=keine Ausgabe
print_level = 1
# Groester Batterieladewert, der im WR gesetzt werden soll, aber höchstens der maximale mögliche Ladewert!!!
MaxLadung = 5000
# die Einspeisegrenze bzw. WR_Kapazitaet 
Einspeisegrenze = 7800
WR_Kapazitaet = 9500

# Grundlast wird verwendet um den aktuellerUeberschuss zu berechnen
Grundlast = 900

# Schaltverzögerung um Schreibzugriffe auf WR zu minimieren
WRSchreibGrenze_nachOben = 550
WRSchreibGrenze_nachUnten = 1750

# Liegt der Batteriestatus unter MindBattLad in % wird voll geladen
MindBattLad = 25
# Wenn Batterie voll in % dann volle Ladung
BatterieVoll = 95
# Wenn Ladung ausgeschaltet den Wert LadungAus in Watt setzen (z.B. 0 oder 10 )
LadungAus = 0

[Reservierung]
# Reservierungsdateiname
PV_ReservieungsDatei=Watt_Reservierung.json
# Hier kann die PV-Reserierung (z.B. für ein E-Auto nachmittags) eingeschatet werden (1=ein, 0=aus)
PV_Reservierung_steuern = 0
# Batterieentladung ein- bzw. ausschalten (1=ein)
Batterieentlandung_steuern = 0
# 3 Faktoren muessen gleichzeitig eintreten, damit die Batterieentladung auf minimum geschaltet wird (siehe auch config.ini.info)
BisLadestandEIN = 80
AbReservierungEIN = 2001
# Hier die Werten für maximale und minimale Batterieentladung in Prozent
MaxEntladung = 100
EntladungAus = 0

[messaging]
# Hier Daten für Pushmessage auf Handy
# Push_Message_EIN (1=EIN/0=AUS)
Push_Message_EIN = 0
Push_Message_Url = https://ntfy.sh/XXXXXXXXX

[Fallback]
# Ab hier Konfiguration der Fallbackfunktion
# Werte 0, 1 oder 2
Fallback_on = 0
# Fallbackzeit = (Fallback_Zeitabstand_Std * 3600 + Cronjob_Minutenabstand *60 *0.9)
Fallback_Zeitabstand_Std = 5
Cronjob_Minutenabstand = 5
