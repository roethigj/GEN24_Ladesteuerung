{
  "__inputs": [
    {
      "name": "DS_GEN24_DATEN_",
      "label": "GEN24_Daten ",
      "description": "",
      "type": "datasource",
      "pluginId": "frser-sqlite-datasource",
      "pluginName": "SQLite"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "frser-sqlite-datasource",
      "name": "SQLite",
      "version": "3.5.0"
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.5.2"
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "semi-dark-purple",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "log": 2,
              "type": "log"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyEUR"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Bruttopreis"
            },
            "properties": [
              {
                "id": "unit"
              },
              {
                "id": "custom.axisLabel",
                "value": "Euro"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 14,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": true,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "queryText": "WITH timemove AS (\nSELECT\n  Zeitpunkt,\n  Bruttopreis AS \"Bruttopreis\"\nFROM strompreise\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n\n)\nSELECT\n  strftime(' %H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  Bruttopreis AS \"Bruttopreis\"\nFROM timemove\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;",
          "queryType": "table",
          "rawQueryText": "WITH timemove AS (\nSELECT\n  Zeitpunkt,\n  Bruttopreis AS \"Bruttopreis\"\nFROM strompreise\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n\n)\nSELECT\n  strftime(' %H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  Bruttopreis AS \"Bruttopreis\"\nFROM timemove\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;",
          "refId": "A",
          "timeColumns": [
            "time",
            "ts"
          ]
        }
      ],
      "title": "Strompreise Brutto -> wähle Zeitraum über Time Picker ($__from -> $__to)",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "green",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 1,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Netzverbrauch"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 10,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 12
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "\nWITH verbrauch AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Netzverbrauch) OVER (ORDER BY Zeitpunkt) - Netzverbrauch AS \"Netzverbrauch\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  ROUND(sum(Netzverbrauch) / 1000.0, 2) AS \"Netzverbrauch\"\nFROM verbrauch\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n",
          "queryType": "table",
          "rawQueryText": "\nWITH verbrauch AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Netzverbrauch) OVER (ORDER BY Zeitpunkt) - Netzverbrauch AS \"Netzverbrauch\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  ROUND(sum(Netzverbrauch) / 1000.0, 2) AS \"Netzverbrauch\"\nFROM verbrauch\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Netzverbrauch",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-yellow",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "AC_Produktion"
            },
            "properties": [
              {
                "id": "custom.axisSoftMax",
                "value": 2
              },
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 12,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(AC_Produktion) OVER (ORDER BY Zeitpunkt) - AC_Produktion AS \"AC_Produktion\"\n \nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00 ', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(AC_Produktion) AS \"AC Produktion\"\n  ROUND(sum(AC_Produktion) / 1000.0, 2) AS \"AC_Produktion\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(AC_Produktion) OVER (ORDER BY Zeitpunkt) - AC_Produktion AS \"AC_Produktion\"\n \nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00 ', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(AC_Produktion) AS \"AC Produktion\"\n  ROUND(sum(AC_Produktion) / 1000.0, 2) AS \"AC_Produktion\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "AC Produktion in kWh",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-red",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "AC_to_DC"
            },
            "properties": [
              {
                "id": "custom.axisSoftMax",
                "value": 1
              },
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 19,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 11
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(AC_to_DC) OVER (ORDER BY Zeitpunkt) - AC_to_DC AS \"AC_to_DC\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00 ', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(AC_to_DC) AS \"BattNetzladung\"\n  ROUND(sum(AC_to_DC) / 1000.0, 2) AS \"AC_to_DC\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(AC_to_DC) OVER (ORDER BY Zeitpunkt) - AC_to_DC AS \"AC_to_DC\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00 ', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(AC_to_DC) AS \"BattNetzladung\"\n  ROUND(sum(AC_to_DC) / 1000.0, 2) AS \"AC_to_DC\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Batterie aus Netz geladen in kWh",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "fieldMinMax": false,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Vorhersage"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              },
              {
                "id": "custom.axisSoftMax",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 17,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH timemove AS (\nSELECT\n  Zeitpunkt,\n Vorhersage AS \"Vorhersage\"\nFROM PV_Daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --Vorhersage AS \"Vorhersage\"\n  ROUND(sum(Vorhersage) / 10000.0, 2) AS \"Vorhersage\"\nFROM timemove\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "queryType": "table",
          "rawQueryText": "WITH timemove AS (\nSELECT\n  Zeitpunkt,\n Vorhersage AS \"Vorhersage\"\nFROM PV_Daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000  + 3600, 'unixepoch')\n\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --Vorhersage AS \"Vorhersage\"\n  ROUND(sum(Vorhersage) / 10000.0, 2) AS \"Vorhersage\"\nFROM timemove\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Vorhersage in kWh",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 16,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-red",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Batterie SOC"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "queryText": "with timeline AS (\nSELECT\n strftime('%s', Zeitpunkt) AS times,\n Zeitpunkt,\n BattStatus AS \"Batterie SOC\"\nFROM PV_Daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000-3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000+3600, 'unixepoch')\nORDER BY Zeitpunkt\n)\n\nSELECT\ntimes,\n Zeitpunkt,\n \"Batterie SOC\"\nFROM timeline\nWHERE\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nORDER BY times;\n",
          "queryType": "table",
          "rawQueryText": "with timeline AS (\nSELECT\n strftime('%s', Zeitpunkt) AS times,\n Zeitpunkt,\n BattStatus AS \"Batterie SOC\"\nFROM PV_Daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000-3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000+3600, 'unixepoch')\nORDER BY Zeitpunkt\n)\n\nSELECT\ntimes,\n Zeitpunkt,\n \"Batterie SOC\"\nFROM timeline\nWHERE\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nORDER BY times;\n",
          "refId": "A",
          "timeColumns": [
            "times",
            "zeitpunkt"
          ]
        }
      ],
      "title": "SOC Batterie",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-yellow",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "DC_Produktion"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              },
              {
                "id": "custom.axisCenteredZero",
                "value": false
              },
              {
                "id": "custom.axisSoftMax",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 50
      },
      "id": 13,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 11
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(DC_Produktion) OVER (ORDER BY Zeitpunkt) - DC_Produktion AS \"DC_Produktion\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(DC_Produktion) AS \"DC Produktion\"\n  ROUND(sum(DC_Produktion) / 1000.0, 2) AS \"DC_Produktion\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(DC_Produktion) OVER (ORDER BY Zeitpunkt) - DC_Produktion AS \"DC_Produktion\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(DC_Produktion) AS \"DC Produktion\"\n  ROUND(sum(DC_Produktion) / 1000.0, 2) AS \"DC_Produktion\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "DC Produktion in kWh",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Einspeisung"
            },
            "properties": [
              {
                "id": "custom.axisSoftMax",
                "value": 1
              },
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 57
      },
      "id": 14,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 11
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Einspeisung) OVER (ORDER BY Zeitpunkt) - Einspeisung AS \"Einspeisung\"\n  \nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(Einspeisung) AS \"Einspeisung\"\n  ROUND(sum(Einspeisung) / 1000.0, 2) AS \"Einspeisung\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Einspeisung) OVER (ORDER BY Zeitpunkt) - Einspeisung AS \"Einspeisung\"\n  \nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(Einspeisung) AS \"Einspeisung\"\n  ROUND(sum(Einspeisung) / 1000.0, 2) AS \"Einspeisung\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Einspeisung",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "red",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Batterie_In"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              },
              {
                "id": "custom.axisSoftMax",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 64
      },
      "id": 15,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Batterie_IN) OVER (ORDER BY Zeitpunkt) - Batterie_IN AS \"Batterie_IN\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(Batterie_In) AS \"In Batterie\"\n  ROUND(sum(Batterie_In) / 1000.0, 2) AS \"Batterie_In\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Batterie_IN) OVER (ORDER BY Zeitpunkt) - Batterie_IN AS \"Batterie_IN\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n)\nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\n  --sum(Batterie_In) AS \"In Batterie\"\n  ROUND(sum(Batterie_In) / 1000.0, 2) AS \"Batterie_In\"\nFROM verbrauchview\nWHERE\t                                                         -- Und hier grenzt man das Ergebnis wieder ein, damit man nur den ausgewählten Zeitraum bekommt\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n\n\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "In Batterie geladen in kWh",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "frser-sqlite-datasource",
        "uid": "${DS_GEN24_DATEN_}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-red",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Batterie_Out"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "kWh"
              },
              {
                "id": "custom.axisSoftMax",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 71
      },
      "id": 16,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "sum",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 14
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "columns": [],
          "datasource": {
            "type": "frser-sqlite-datasource",
            "uid": "${DS_GEN24_DATEN_}"
          },
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "queryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Batterie_OUT) OVER (ORDER BY Zeitpunkt) - Batterie_OUT AS \"Batterie_OUT\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\nROUND(sum(Batterie_Out) / 1000.0, 2) AS \"Batterie_Out\"\nFROM verbrauchview\nWHERE\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n",
          "queryType": "table",
          "rawQueryText": "WITH verbrauchview AS (\nSELECT\n  Zeitpunkt,\n  LEAD(Batterie_OUT) OVER (ORDER BY Zeitpunkt) - Batterie_OUT AS \"Batterie_OUT\"\nFROM pv_daten\nWHERE\n  Zeitpunkt >= datetime($__from / 1000 - 3600, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000 + 3600, 'unixepoch')\n) \nSELECT\n  strftime('%H:00', Zeitpunkt) AS \"Zeitpunkt\",\nROUND(sum(Batterie_Out) / 1000.0, 2) AS \"Batterie_Out\"\nFROM verbrauchview\nWHERE\n  Zeitpunkt >= datetime($__from / 1000, 'unixepoch') AND\n  Zeitpunkt <= datetime($__to / 1000, 'unixepoch')\nGROUP BY strftime('%d %H:00', Zeitpunkt)\nORDER BY Zeitpunkt;\n\n",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "timeColumns": [
            "time",
            "ts"
          ],
          "type": "json",
          "url": "https://github.com/grafana/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Aus Batterie geladen in kWh",
      "type": "barchart"
    }
  ],
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now/d",
    "to": "now/d"
  },
  "timepicker": {
    "refresh_intervals": []
  },
  "timezone": "utc",
  "title": "Tagesauswertung",
  "uid": "dash02",
  "version": 12,
  "weekStart": ""
}